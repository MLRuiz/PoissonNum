function [X,Y,Phi]=vol(m,f,g)
%% Especificaciones
% Aproxima, por medio de volumenes finitos, la ecuaci\'on de Laplace
% con condiciones de Dirichlet en las fronteras. En un cuadrado de
% [0,1]x[0,1].
% m n\'umero de puntos de la malla
% f funci\'on de velocidad
% g condiciones de frontera
% phi potencial
% p etiqueta a todos los puntos con una posici\'n general
% M matriz de pesos
% Martha Leticia Ruiz Zavala. Noviembre 2016
% Ejemplo: [X,Y,Phi]=vol(8,@f,@g);

%% Inicialización
% close all
h=1/(m-1);
[x,y]=meshgrid(0:h:1);
% modificar tamañitos
RHS=sparse((m-3)*(m-3),1);
Phi=sparse(m-1,m-1);
M=sparse((m-3)*(m-3),(m-3)*(m-3));
k=0;
x=flipud(x); % puntos en la malla
y=flipud(y); % puntos en la malla
for i=1:m-1 % Centroides de la malla
    for j=1:m-1
        X(i,j)=(x(i,j)+x(i,j+1))/2;
        Y(i,j)=(y(i,j)+y(i+1,j))/2;
    end
end
%% Puntos no contiguos a la frontera
for j=3:(m-3)
    for i=3:(m-3)
        p=(m-3)*(j-2)+(i-1);
        RHS(p)=RHS(p)-f([X(i,j),Y(i,j)],k)*h*h;
        M(p,(p-1):(p+1))=[1 -4 1];
        M(p,p-(m-3))=1;
        M(p,p+(m-3))=1;
    end
end
%% Puntos contiguos a las fronteras verticales
for i=2:(m-2)
    % Izquierda
    j=2;
    p=i-1;
    RHS(p)=RHS(p)-f([X(i,j),Y(i,j)],k)*h*h - g([X(i,j-1),Y(i,j-1)],k);
    M(p,p+(m-3))=1;
    if(i==2) % esquina superior izquierda
        M(p,p:(p+1))=[-4 1];
        RHS(p)=RHS(p) - g([X(i-1,j),Y(i-1,j)],k);
    elseif (i==(m-2)) % esquina inferior izquierda
        M(p,(p-1):(p))=[1 -4];
        RHS(p)=RHS(p) - g([X(i+1,j),Y(i+1,j)],k);
    else
        M(p,(p-1):(p+1))=[1 -4 1];
    end
    
    % Derecha
    j=m-2;
    p=(m-3)*(m-4)+i-1;
    RHS(p)= RHS(p)-f([X(i,j),Y(i,j)],k)*h*h - g([X(i,j+1),Y(i,j+1)],k);
    M(p,p-(m-3))=1;
    if (i==2) % esquina superior derecha
        M(p,p:(p+1))=[-4 1];
        RHS(p)=RHS(p) - g([X(i-1,j),Y(i-1,j)],k);
    elseif (i==(m-2)) % esquina inferior derecha
        M(p,(p-1):p)=[1 -4];
        RHS(p)=RHS(p) - g([X(i+1,j),Y(i+1,j)],k);
    else
        M(p,(p-1):(p+1))=[1 -4 1];
    end
end

%% Puntos contiguos a las fronteras horizontales
for j=3:m-3
    % Inferior
    i=m-2;
    p=(m-3)*(j-1);
    RHS(p)= RHS(p) -f([X(i,j),Y(i,j)],k)*h*h - g([X(i+1,j),Y(i+1,j)],k);
    M(p,(p-1):(p))=[1 -4];
    M(p,p+(m-3))=1;
    M(p,p-(m-3))=1;
    
    % Superior
    i=2;
    p=(m-3)*(j-2)+1;
    RHS(p)= RHS(p)-f([X(i,j),Y(i,j)],k)*h*h - g([X(i-1,j),Y(i-1,j)],k);
    M(p,p:(p+1))=[-4 1];
    M(p,p+(m-3))=1;
    M(p,p-(m-3))=1;
end
%% Soluci\'on
% Aproximaci\'on de Phi para los nodos interiores
Phi(2:(m-2),2:(m-2))=reshape(M\RHS,m-3,m-3);
% Condiciones en la frontera
% Orilla izquierda
for i=1:m-1
    Phi(i,1)=g([X(i,1),Y(i,1)],k);
end
% Orilla inferior
for j=1:m-1
    Phi(m-1,j)=g([X(m-1,j),Y(m-1,j)],k);
end
% Orilla derecha
for i=1:m-1
    Phi(i,m-1)=g([X(i,m-1),Y(i,m-1)],k);
end
% Orilla superior
for j=1:m-1
    Phi(1,j)=g([X(1,j),Y(1,j)],k);
end
%% Graficamos la soluci\'on
surf(X,Y,Phi)
end
